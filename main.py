#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –∞–≥–µ–Ω—Ç–∞ –∑–∞–∫—É–ø–æ–∫ Horiens
"""

import logging
import time
import pandas as pd
from datetime import datetime
from typing import Dict, List, Any
import os

# –ò–º–ø–æ—Ä—Ç—ã –º–æ–¥—É–ª–µ–π
from config import validate_config, logger
from ozon_api import OzonAPI
from sheets import GoogleSheets
from telegram_notify import TelegramNotifier
from forecast import PurchaseForecast
from stock_tracker import StockTracker

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∞–≥–µ–Ω—Ç–∞ –∑–∞–∫—É–ø–æ–∫"""
    start_time = time.time()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        if not validate_config():
            logger.error("–û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã.")
            return
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        ozon_api = OzonAPI()
        sheets = GoogleSheets()
        telegram = TelegramNotifier()
        stock_tracker = StockTracker()
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–ø—É—Å–∫–µ
        telegram.send_message("üöÄ –ê–≥–µ–Ω—Ç –∑–∞–∫—É–ø–æ–∫ Horiens –∑–∞–ø—É—â–µ–Ω")
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Ozon API
        logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Ozon API...")
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        products = ozon_api.get_products()
        if not products:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã")
            telegram.send_message("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–≤–∞—Ä—ã –∏–∑ Ozon API")
            return
        
        logger.info(f"–£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã —Ç–æ–≤–∞—Ä—ã: {len(products)} —à—Ç")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–µ –æ—Å—Ç–∞—Ç–∫–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        logger.info("–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö...")
        current_stocks = ozon_api.get_stocks_data()
        if current_stocks:
            stock_tracker.save_stock_data(current_stocks)
            logger.info(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(current_stocks)} –∑–∞–ø–∏—Å–µ–π –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö")
        else:
            logger.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤
        logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤...")
        sales_data = stock_tracker.estimate_sales_from_stock_changes(days=90)
        
        if not sales_data:
            logger.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤")
            telegram.send_message("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(sales_data)} –∑–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏ –æ—Å—Ç–∞—Ç–∫–æ–≤")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö
        logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö...")
        stocks_data = current_stocks if current_stocks else []
        
        if not stocks_data:
            logger.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö")
            telegram.send_message("‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
        
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ {len(stocks_data)} –∑–∞–ø–∏—Å–µ–π –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö")
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        logger.info("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...")
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö
        logger.info("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö...")
        sales_df = pd.DataFrame(sales_data)
        if not sales_df.empty:
            logger.info(f"–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {len(sales_df)} –∑–∞–ø–∏—Å–µ–π –æ –ø—Ä–æ–¥–∞–∂–∞—Ö")
        else:
            logger.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö
        logger.info("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö...")
        stocks_df = pd.DataFrame(stocks_data)
        if not stocks_df.empty:
            logger.info(f"–ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ {len(stocks_df)} –∑–∞–ø–∏—Å–µ–π –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö")
        else:
            logger.warning("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ–± –æ—Å—Ç–∞—Ç–∫–∞—Ö –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
        
        # –†–∞—Å—á–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –∑–∞–∫—É–ø–æ–∫
        logger.info("–†–∞—Å—á–µ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –∑–∞–∫—É–ø–æ–∫...")
        calculator = PurchaseForecast()
        
        # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        sales_df = calculator.prepare_sales_data(sales_data)
        stocks_df = calculator.prepare_stocks_data(stocks_data)
        
        # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –ø—Ä–æ–≥–Ω–æ–∑
        forecast_data = calculator.calculate_forecast(sales_df, stocks_df)
        
        if not forecast_data:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –∑–∞–∫—É–ø–æ–∫")
            telegram.send_message("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å—Å—á–∏—Ç–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –∑–∞–∫—É–ø–æ–∫")
            return
        
        logger.info(f"–†–∞—Å—Å—á–∏—Ç–∞–Ω –ø—Ä–æ–≥–Ω–æ–∑ –¥–ª—è {len(forecast_data)} –ø–æ–∑–∏—Ü–∏–π")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –∑–∞–∫—É–ø–∫–∞—Ö
        logger.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –æ –∑–∞–∫—É–ø–∫–∞—Ö...")
        report_data = calculator.generate_purchase_report(forecast_data)
        
        if not report_data:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –æ –∑–∞–∫—É–ø–∫–∞—Ö")
            telegram.send_message("‚ùå –û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –æ –∑–∞–∫—É–ø–∫–∞—Ö")
            return
        
        logger.info(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω –æ—Ç—á–µ—Ç –¥–ª—è {len(report_data)} SKU")
        
        # –ó–∞–ø–∏—Å—å –æ—Ç—á–µ—Ç–∞ –≤ Google Sheets
        logger.info("–ó–∞–ø–∏—Å—å –æ—Ç—á–µ—Ç–∞ –≤ Google Sheets...")
        sheets.write_purchase_report(report_data)
        logger.info("–û—Ç—á–µ—Ç –æ –∑–∞–∫—É–ø–∫–∞—Ö –∑–∞–ø–∏—Å–∞–Ω –≤ Google Sheets")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞
        logger.info("–°–æ–∑–¥–∞–Ω–∏–µ —Å–≤–æ–¥–Ω–æ–≥–æ –ª–∏—Å—Ç–∞...")
        sheets.create_summary_sheet(report_data)
        logger.info("–°–≤–æ–¥–Ω—ã–π –ª–∏—Å—Ç —Å–æ–∑–¥–∞–Ω")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –≤ Telegram
        logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á–µ—Ç–∞ –≤ Telegram...")
        telegram.send_purchase_report(report_data)
        logger.info("–û—Ç—á–µ—Ç –æ –∑–∞–∫—É–ø–∫–∞—Ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Telegram")
        
        # –û—Ç–ø—Ä–∞–≤–∫–∞ –∏—Ç–æ–≥–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        execution_time = time.time() - start_time
        telegram.send_message(
            f"‚úÖ –ê–≥–µ–Ω—Ç –∑–∞–∫—É–ø–æ–∫ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É –∑–∞ {execution_time:.2f} —Å–µ–∫—É–Ω–¥\n"
            f"üìä –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(report_data)} –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∑–∞–∫—É–ø–∫–∏"
        )
        
        logger.info("=" * 50)
        logger.info("–ê–≥–µ–Ω—Ç –∑–∞–∫—É–ø–æ–∫ –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É –∑–∞ %.2f —Å–µ–∫—É–Ω–¥", execution_time)
        logger.info("–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ %d –ø–æ–∑–∏—Ü–∏–π –¥–ª—è –∑–∞–∫—É–ø–∫–∏", len(report_data))
        logger.info("=" * 50)
        
    except Exception as e:
        logger.error("–û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –∞–≥–µ–Ω—Ç–∞ –∑–∞–∫—É–ø–æ–∫: %s", str(e))
        try:
            if 'telegram' in locals():
                telegram.send_message(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ä–∞–±–æ—Ç–µ –∞–≥–µ–Ω—Ç–∞ –∑–∞–∫—É–ø–æ–∫: {str(e)}")
        except Exception as telegram_error:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –≤ Telegram: %s", str(telegram_error))

if __name__ == "__main__":
    main() 