#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ Ozon API
"""

import os
import requests
import json
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def test_ozon_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã Ozon API"""
    
    print("==================================================")
    print("–¢–ï–°–¢ –≠–ù–î–ü–û–ò–ù–¢–û–í OZON API")
    print("==================================================")
    
    # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á–∏
    api_key = os.getenv('OZON_API_KEY')
    client_id = os.getenv('OZON_CLIENT_ID')
    
    if not api_key or not client_id:
        print("‚ùå API –∫–ª—é—á–∏ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!")
        print("–î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª:")
        print("OZON_API_KEY=–≤–∞—à_api_–∫–ª—é—á")
        print("OZON_CLIENT_ID=–≤–∞—à_client_id")
        return
    
    print(f"‚úÖ API –∫–ª—é—á–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã")
    print(f"Client ID: {client_id[:8]}...")
    print(f"API Key: {api_key[:8]}...")
    print()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
    base_url = "https://api-seller.ozon.ru"
    headers = {
        "Client-Id": client_id,
        "Api-Key": api_key,
        "Content-Type": "application/json"
    }
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —ç–Ω–¥–ø–æ–∏–Ω—Ç—ã
    endpoints_to_test = [
        {
            "name": "–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (v3)",
            "endpoint": "/v3/product/list",
            "data": {
                "limit": 10,
                "offset": 0,
                "filter": {
                    "visibility_details": {
                        "active": True
                    }
                },
                "with": {
                    "price": True,
                    "stock": True
                }
            }
        },
        {
            "name": "–°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ (v2)",
            "endpoint": "/v2/product/list",
            "data": {
                "limit": 10,
                "offset": 0,
                "with": {
                    "price": True,
                    "stock": True
                }
            }
        },
        {
            "name": "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–æ–≤–∞—Ä–∞—Ö (v3)",
            "endpoint": "/v3/product/info/list",
            "data": {
                "product_id": [1, 2, 3]
            }
        },
        {
            "name": "–û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ (v3)",
            "endpoint": "/v3/product/info/stocks",
            "data": {
                "product_id": 1
            }
        },
        {
            "name": "–û—Å—Ç–∞—Ç–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤ (v2)",
            "endpoint": "/v2/product/info/stocks",
            "data": {
                "product_id": 1
            }
        },
        {
            "name": "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞ (v1)",
            "endpoint": "/v1/analytics/data",
            "data": {
                "date_from": "2024-10-01",
                "date_to": "2024-10-31",
                "metrics": ["revenue", "orders"],
                "dimension": ["day"],
                "filters": [],
                "sort": [{"key": "day", "order": "ASC"}],
                "limit": 10,
                "offset": 0
            }
        }
    ]
    
    for test in endpoints_to_test:
        print(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: {test['name']}")
        print(f"   –≠–Ω–¥–ø–æ–∏–Ω—Ç: {test['endpoint']}")
        
        try:
            url = f"{base_url}{test['endpoint']}"
            response = requests.post(url, headers=headers, json=test['data'])
            
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                result = response.json()
                print(f"   ‚úÖ –£—Å–ø–µ—à–Ω–æ!")
                if "result" in result:
                    print(f"   –î–∞–Ω–Ω—ã–µ: {len(result['result'])} —ç–ª–µ–º–µ–Ω—Ç–æ–≤")
                else:
                    print(f"   –û—Ç–≤–µ—Ç: {result}")
            elif response.status_code == 404:
                print(f"   ‚ùå –≠–Ω–¥–ø–æ–∏–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω (404)")
                print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            elif response.status_code == 401:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (401)")
                print(f"   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏")
            elif response.status_code == 403:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ (403)")
                print(f"   –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text[:200]}...")
                
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        
        print()
    
    print("==================================================")
    print("–¢–ï–°–¢ –ó–ê–í–ï–†–®–ï–ù")
    print("==================================================")

if __name__ == "__main__":
    test_ozon_api() 